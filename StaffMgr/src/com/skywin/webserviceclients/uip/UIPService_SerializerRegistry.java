// Helper class generated by xrpcc, do not edit.
// Contents subject to change without notice.

package com.skywin.webserviceclients.uip;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class UIPService_SerializerRegistry implements SerializerConstants {
    public UIPService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getUserInfoByUserID");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByUserID_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByUserID_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "CommonLoginResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "ValidateToken");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_ValidateToken_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_ValidateToken_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "QueryResult");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.QueryResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.QueryResult.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getVersionResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getVersion_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getVersion_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "CommonLogin");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "ArrayOfOrgDetail");
            QName elemName = new QName("", "item");
            QName elemType = new QName("http://portal.gmcc.net/types/UIPService", "OrgDetail");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING, 
                elemName, elemType, com.skywin.webserviceclients.uip.OrgDetail.class, 1, null);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.OrgDetail[].class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getOrgnizationInfoByOUID");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getOrgnizationInfoByOUID_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getOrgnizationInfoByOUID_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getVersion");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getVersion_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getVersion_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "AppResult");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.AppResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.AppResult.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getOrgnizationInfoByOUIDResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getOrgnizationInfoByOUID_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getOrgnizationInfoByOUID_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "OrganizationInfo");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.OrganizationInfo_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.OrganizationInfo.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "ArrayOfUserInfo");
            QName elemName = new QName("", "item");
            QName elemType = new QName("http://portal.gmcc.net/types/UIPService", "UserInfo");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING, 
                elemName, elemType, com.skywin.webserviceclients.uip.UserInfo.class, 1, null);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UserInfo[].class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "applicationToReadResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_applicationToRead_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_applicationToRead_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "SSOLogin");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_SSOLogin_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_SSOLogin_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getUserInfoByOUIDResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByOUID_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByOUID_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "OrgDetail");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.OrgDetail_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.OrgDetail.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "AuthResult");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.AuthResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.AuthResult.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "applicationToDoResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_applicationToDo_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_applicationToDo_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "SSOLoginResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_SSOLogin_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_SSOLogin_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "UserInfo");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UserInfo_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UserInfo.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "LogoutResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_Logout_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_Logout_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "applicationToRead");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_applicationToRead_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_applicationToRead_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "ValidateTokenResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_ValidateToken_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_ValidateToken_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/types/UIPService", "ArrayOfstring");
            QName elemName = new QName("", "item");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING, 
                elemName, SchemaConstants.QNAME_TYPE_STRING, java.lang.String.class, 1, null);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,java.lang.String[].class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getUserInfoByUserIDResponse");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByUserID_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByUserID_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "Logout");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_Logout_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_Logout_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "applicationToDo");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_applicationToDo_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_applicationToDo_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://portal.gmcc.net/wsdl/UIPService", "getUserInfoByOUID");
            CombinedSerializer serializer = new com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByOUID_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer);
            registerSerializer(mapping,com.skywin.webserviceclients.uip.UIPServiceIF_getUserInfoByOUID_RequestStruct.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
