// Helper class generated by xrpcc, do not edit.
// Contents subject to change without notice.

package com.skywin.webserviceclients.uip;

import javax.xml.namespace.QName;

import com.sun.xml.rpc.encoding.CombinedSerializer;
import com.sun.xml.rpc.encoding.Initializable;
import com.sun.xml.rpc.encoding.InternalTypeMappingRegistry;
import com.sun.xml.rpc.encoding.ObjectSerializerBase;
import com.sun.xml.rpc.encoding.SOAPDeserializationContext;
import com.sun.xml.rpc.encoding.SOAPDeserializationState;
import com.sun.xml.rpc.encoding.SOAPSerializationContext;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.streaming.XMLReader;
import com.sun.xml.rpc.streaming.XMLReaderUtil;
import com.sun.xml.rpc.streaming.XMLWriter;

public class UIPServiceIF_CommonLogin_ResponseStruct_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final QName ns1_result_QNAME = new QName("", "result");
    private static final QName ns3_AuthResult_TYPE_QNAME = new QName("http://portal.gmcc.net/types/UIPService", "AuthResult");
    private CombinedSerializer myAuthResult_SOAPSerializer;
    private static final int myRESULT_INDEX = 0;
    
    public UIPServiceIF_CommonLogin_ResponseStruct_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myAuthResult_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.skywin.webserviceclients.uip.AuthResult.class, ns3_AuthResult_TYPE_QNAME);
    }
    
    public Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        UIPServiceIF_CommonLogin_ResponseStruct instance = new UIPServiceIF_CommonLogin_ResponseStruct();
        UIPServiceIF_CommonLogin_ResponseStruct_SOAPBuilder builder = null;
        Object member;
        boolean isComplete = true;
        QName elementName;
        
        reader.nextElementContent();
        if (reader.getState() == XMLReader.START) {
            member = myAuthResult_SOAPSerializer.deserialize(null, reader, context);
            if (member instanceof SOAPDeserializationState) {
                if (builder == null) {
                    builder = new UIPServiceIF_CommonLogin_ResponseStruct_SOAPBuilder();
                }
                state = registerWithMemberState(instance, state, member, myRESULT_INDEX, builder);
                isComplete = false;
            } else {
                instance.setResult((com.skywin.webserviceclients.uip.AuthResult)member);
            }
            reader.nextElementContent();
        }
        elementName = reader.getName();
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (Object)instance : (Object)state);
    }
    
    public void doSerializeInstance(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_ResponseStruct instance = (com.skywin.webserviceclients.uip.UIPServiceIF_CommonLogin_ResponseStruct)obj;
        
        myAuthResult_SOAPSerializer.serialize(instance.getResult(), ns1_result_QNAME, null, writer, context);
    }
    protected void verifyName(XMLReader reader, QName expectedName) throws Exception {
    }
}
