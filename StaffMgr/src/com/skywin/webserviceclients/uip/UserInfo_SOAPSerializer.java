// Helper class generated by xrpcc, do not edit.
// Contents subject to change without notice.

package com.skywin.webserviceclients.uip;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class UserInfo_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final QName ns1_userDN_QNAME = new QName("", "userDN");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_cmccaccount_QNAME = new QName("", "cmccaccount");
    private static final QName ns1_ext7_QNAME = new QName("", "ext7");
    private static final QName ns1_ext1_QNAME = new QName("", "ext1");
    private static final QName ns1_jobTitle_QNAME = new QName("", "jobTitle");
    private static final QName ns1_ouid_QNAME = new QName("", "ouid");
    private static final QName ns4_int_TYPE_QNAME = SOAPConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns4__int__java_lang_Integer_Int_Serializer;
    private static final QName ns1_region_QNAME = new QName("", "region");
    private static final QName ns1_address_QNAME = new QName("", "address");
    private static final QName ns1_firstName_QNAME = new QName("", "firstName");
    private static final QName ns1_department_QNAME = new QName("", "department");
    private static final QName ns1_company_QNAME = new QName("", "company");
    private static final QName ns1_ext9_QNAME = new QName("", "ext9");
    private static final QName ns1_mobilePhone_QNAME = new QName("", "mobilePhone");
    private static final QName ns1_employeeNum_QNAME = new QName("", "employeeNum");
    private static final QName ns1_branch_QNAME = new QName("", "branch");
    private static final QName ns1_ext6_QNAME = new QName("", "ext6");
    private static final QName ns1_roleList_QNAME = new QName("", "roleList");
    private static final QName ns3_ArrayOfstring_TYPE_QNAME = new QName("http://portal.gmcc.net/types/UIPService", "ArrayOfstring");
    private CombinedSerializer myns3_ArrayOfstring__StringArray_SOAPSerializer1;
    private static final QName ns1_ext8_QNAME = new QName("", "ext8");
    private static final QName ns1_branchid_QNAME = new QName("", "branchid");
    private static final QName ns1_workPhone_QNAME = new QName("", "workPhone");
    private static final QName ns1_ext4_QNAME = new QName("", "ext4");
    private static final QName ns1_groupid_QNAME = new QName("", "groupid");
    private static final QName ns1_group_QNAME = new QName("", "group");
    private static final QName ns1_uid_QNAME = new QName("", "uid");
    private static final QName ns1_orderid_QNAME = new QName("", "orderid");
    private static final QName ns1_ext3_QNAME = new QName("", "ext3");
    private static final QName ns1_lastName_QNAME = new QName("", "lastName");
    private static final QName ns1_ext2_QNAME = new QName("", "ext2");
    private static final QName ns1_departmentid_QNAME = new QName("", "departmentid");
    private static final QName ns1_companyid_QNAME = new QName("", "companyid");
    private static final QName ns1_ext5_QNAME = new QName("", "ext5");
    private static final QName ns1_ext10_QNAME = new QName("", "ext10");
    private static final QName ns1_fullName_QNAME = new QName("", "fullName");
    private static final QName ns1_email_QNAME = new QName("", "email");
    private static final int myUSERDN_INDEX = 0;
    private static final int myCMCCACCOUNT_INDEX = 1;
    private static final int myEXT7_INDEX = 2;
    private static final int myEXT1_INDEX = 3;
    private static final int myJOBTITLE_INDEX = 4;
    private static final int myOUID_INDEX = 5;
    private static final int myREGION_INDEX = 6;
    private static final int myADDRESS_INDEX = 7;
    private static final int myFIRSTNAME_INDEX = 8;
    private static final int myDEPARTMENT_INDEX = 9;
    private static final int myCOMPANY_INDEX = 10;
    private static final int myEXT9_INDEX = 11;
    private static final int myMOBILEPHONE_INDEX = 12;
    private static final int myEMPLOYEENUM_INDEX = 13;
    private static final int myBRANCH_INDEX = 14;
    private static final int myEXT6_INDEX = 15;
    private static final int myROLELIST_INDEX = 16;
    private static final int myEXT8_INDEX = 17;
    private static final int myBRANCHID_INDEX = 18;
    private static final int myWORKPHONE_INDEX = 19;
    private static final int myEXT4_INDEX = 20;
    private static final int myGROUPID_INDEX = 21;
    private static final int myGROUP_INDEX = 22;
    private static final int myUID_INDEX = 23;
    private static final int myORDERID_INDEX = 24;
    private static final int myEXT3_INDEX = 25;
    private static final int myLASTNAME_INDEX = 26;
    private static final int myEXT2_INDEX = 27;
    private static final int myDEPARTMENTID_INDEX = 28;
    private static final int myCOMPANYID_INDEX = 29;
    private static final int myEXT5_INDEX = 30;
    private static final int myEXT10_INDEX = 31;
    private static final int myFULLNAME_INDEX = 32;
    private static final int myEMAIL_INDEX = 33;
    
    public UserInfo_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns2_string_TYPE_QNAME);
        myns4__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Integer.class, ns4_int_TYPE_QNAME);
        myns3_ArrayOfstring__StringArray_SOAPSerializer1 = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String[].class, ns3_ArrayOfstring_TYPE_QNAME);
    }
    
    public Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        UserInfo instance = new UserInfo();
        UserInfo_SOAPBuilder builder = null;
        Object member;
        boolean isComplete = true;
        QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_userDN_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_userDN_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myUSERDN_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setUserDN((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_cmccaccount_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_cmccaccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCMCCACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCmccaccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext7_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext7_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT7_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt7((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext1_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext1_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT1_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt1((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_jobTitle_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_jobTitle_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myJOBTITLE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setJobTitle((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ouid_QNAME)) {
                member = myns4__int__java_lang_Integer_Int_Serializer.deserialize(ns1_ouid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOUID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOuid((java.lang.Integer)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_region_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_region_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegion((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_address_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_address_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myADDRESS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAddress((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_firstName_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_firstName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFIRSTNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFirstName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_department_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_department_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPARTMENT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepartment((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_company_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_company_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMPANY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCompany((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext9_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext9_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT9_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt9((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_mobilePhone_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_mobilePhone_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMOBILEPHONE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMobilePhone((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_employeeNum_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_employeeNum_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEMPLOYEENUM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setEmployeeNum((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_branch_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_branch_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBRANCH_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBranch((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext6_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext6_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT6_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt6((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_roleList_QNAME)) {
                member = myns3_ArrayOfstring__StringArray_SOAPSerializer1.deserialize(ns1_roleList_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myROLELIST_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRoleList((java.lang.String[])member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext8_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext8_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT8_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt8((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_branchid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_branchid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBRANCHID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBranchid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_workPhone_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_workPhone_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWORKPHONE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWorkPhone((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext4_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext4_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT4_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt4((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_groupid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_groupid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myGROUPID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setGroupid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_group_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_group_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myGROUP_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setGroup((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_uid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_uid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myUID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setUid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_orderid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_orderid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myORDERID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOrderid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext3_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext3_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT3_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt3((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_lastName_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_lastName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myLASTNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setLastName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext2_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext2_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT2_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt2((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_departmentid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_departmentid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPARTMENTID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepartmentid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_companyid_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_companyid_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMPANYID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCompanyid((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext5_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext5_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT5_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt5((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ext10_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ext10_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXT10_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExt10((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_fullName_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_fullName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFULLNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFullName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_email_QNAME)) {
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_email_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new UserInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEMAIL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setEmail((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (Object)instance : (Object)state);
    }
    
    public void doSerializeInstance(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.skywin.webserviceclients.uip.UserInfo instance = (com.skywin.webserviceclients.uip.UserInfo)obj;
        
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getUserDN(), ns1_userDN_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getCmccaccount(), ns1_cmccaccount_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt7(), ns1_ext7_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt1(), ns1_ext1_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getJobTitle(), ns1_jobTitle_QNAME, null, writer, context);
        myns4__int__java_lang_Integer_Int_Serializer.serialize(instance.getOuid(), ns1_ouid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getRegion(), ns1_region_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getAddress(), ns1_address_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getFirstName(), ns1_firstName_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getDepartment(), ns1_department_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getCompany(), ns1_company_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt9(), ns1_ext9_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getMobilePhone(), ns1_mobilePhone_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getEmployeeNum(), ns1_employeeNum_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getBranch(), ns1_branch_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt6(), ns1_ext6_QNAME, null, writer, context);
        myns3_ArrayOfstring__StringArray_SOAPSerializer1.serialize(instance.getRoleList(), ns1_roleList_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt8(), ns1_ext8_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getBranchid(), ns1_branchid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getWorkPhone(), ns1_workPhone_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt4(), ns1_ext4_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getGroupid(), ns1_groupid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getGroup(), ns1_group_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getUid(), ns1_uid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrderid(), ns1_orderid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt3(), ns1_ext3_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getLastName(), ns1_lastName_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt2(), ns1_ext2_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getDepartmentid(), ns1_departmentid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getCompanyid(), ns1_companyid_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt5(), ns1_ext5_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getExt10(), ns1_ext10_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getFullName(), ns1_fullName_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getEmail(), ns1_email_QNAME, null, writer, context);
    }
}
