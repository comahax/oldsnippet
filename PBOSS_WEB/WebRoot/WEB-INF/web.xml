<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext*.xml</param-value>
	</context-param>
	
	<!-- 方便在Servlet中拿到Spring容器中的Bean 
		ContextLoaderListener的作用是启动Web容器时，自动装配ApplicationContext的配置信息。
		因为它实现了ServletContextListener这个接口。
	-->
	<listener>
   	 	<listener-class> org.springframework.web.context.ContextLoaderListener </listener-class>
	</listener> 

	<!-- 著名 Character Encoding filter
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>GBK</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
	</filter>
	 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>com.gmcc.pboss.common.filter.ActionFilter</filter-class>
		<!-- 
		<filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
		 -->
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	<!-- 验证码 -->
	<filter>
  		<filter-name>IMAGE_CODE</filter-name>
  		<filter-class>com.gmcc.pboss.common.icode.GenerateImageFilter</filter-class>
  	</filter>
  	<filter-mapping>
  		<filter-name>IMAGE_CODE</filter-name>
  		<url-pattern>/image</url-pattern>
  	</filter-mapping>
	<!--
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
	
	<!-- 文件处理请求 -->
	<servlet>
		<servlet-name>FileHandleServlet </servlet-name>
		<servlet-class>com.gmcc.pboss.common.file.servlet.FileHandleServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FileHandleServlet</servlet-name>
		<url-pattern>/fileHandle</url-pattern>
	</servlet-mapping> 
	
	<servlet>
		<servlet-name>PictureLoadingServlet</servlet-name>
		<servlet-class>com.gmcc.pboss.common.servlet.PictureLoadingServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PictureLoadingServlet</servlet-name>
		<url-pattern>/pictureLoading</url-pattern>
	</servlet-mapping>
	
	<!-- 从FTP读取文件 -->
	<servlet>
		<servlet-name>getFTPImage</servlet-name>
		<servlet-class>com.gmcc.pboss.common.servlet.PictureLoadingServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>getFTPImage</servlet-name>
		<url-pattern>/loadImage</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
